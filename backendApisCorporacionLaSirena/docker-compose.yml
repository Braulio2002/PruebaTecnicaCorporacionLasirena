version: '3.8'

## ðŸ”§ **docker-compose.yml**
services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: cinema_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: cinema_db
      POSTGRES_USER: cinema_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cinema_user -d cinema_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - cinema_network
    # LÃ­mites de recursos
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  app:
    build:
      context: .
      dockerfile: Dockerfile
      # Build args para optimizaciÃ³n
      args:
        NODE_ENV: production
    container_name: cinema_api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://cinema_user:${DB_PASSWORD}@db:5432/cinema_db
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: ${LOG_LEVEL}
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cinema_network
    # LÃ­mites de recursos
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    # Logging driver
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  cinema_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16