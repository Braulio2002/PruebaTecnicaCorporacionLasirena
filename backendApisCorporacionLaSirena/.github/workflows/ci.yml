name: CI

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cinema
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres (TCP) and Generate Prisma Client
        run: |
          node -e "const net=require('net');(async ()=>{for(let i=0;i<30;i++){try{await new Promise((res,rej)=>{const s=net.createConnection(5432,'localhost').on('connect',()=>{s.end();res()}).on('error',rej)});console.log('Postgres listo');process.exit(0);}catch(e){await new Promise(r=>setTimeout(r,2000))}}console.error('Postgres no listo');process.exit(1)})()"
          npx prisma generate

      - name: Apply database migrations
        run: npx prisma migrate deploy --schema=./prisma/schema.prisma
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cinema

      - name: Run e2e tests
        run: npm run test:e2e:local
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cinema
